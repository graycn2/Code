<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.itheima.mapper.BrandMapper">

<!--
    数据库表的字段名称 和 实际类的属性名称不一样 则不能封装数据
    *起别名
    *resultMap
    定义标签
-->
<!--    <select id="selsectAll" resultType="brand">-->

<!--    select id,brand_name brandName,company_name companyName,ordered,description,status-->
<!--     from tb_brand;-->
<!--    </select>-->
<!--
    id:唯一标识
    type：映射的类型，支持别名
-->
    <resultMap id="brandResultMap" type="brand">
<!--
    id:完成主键字段的映射
    column
    property
    result:完成一般字段的映射
-->
        <result column="brand_name" property="brandName" />
        <result column="company_name" property="companyName" />
    </resultMap>
<!--    <insert id="add">-->
<!--        insert into tb_brand (brand_name,company_name,ordered,description,status)-->
<!--        values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status});-->

<!--    </insert>-->

    <insert id="add" useGeneratedKeys="true" keyProperty="id">
        insert into tb_brand (brand_name,company_name,ordered,description,status)
        values (#{brandName}, #{companyName}, #{ordered}, #{description}, #{status});

    </insert>
<!--    <update id="update">-->
<!--       update tb_brand-->
<!--        set-->
<!--            brand_name = #{brandName},-->
<!--            company_name = #{companyName},-->
<!--            ordered = #{ordered},-->
<!--            description = #{description},-->
<!--            status = #{status}-->
<!--        where id = #{id};-->
<!--    </update>-->

<!--    <update id="update">-->
<!--        update tb_brand-->
<!--        set-->
<!--            brand_name = #{brandName},-->
<!--            company_name = #{companyName},-->
<!--            ordered = #{ordered},-->
<!--            description = #{description},-->
<!--            status = #{status}-->
<!--        where id = #{id};-->
<!--    </update>-->

    <update id="update">
        update tb_brand
        <set>

        <if test="brandName != null and brandName != ''">
             brand_name = #{brandName},
        </if>
        <if test="companyName != null and companyName != ''">
             company_name = #{companyName},
        </if>
        <if test="ordered != null ">
            ordered = #{ordered},
        </if>
        <if test="description != null and description != ''">
            description = #{description},
        </if>
        <if test="status != null ">
            status = #{status}
        </if>
        where id = #{id};
        </set>
    </update>


    <delete id="deleteById">
        delete from tb_brand where id = #{id};
    </delete>


    <delete id="deleteByIds">
        delete from tb_brand where id in (
            <foreach collection="ids" item="id" separator=",">
                #{id}
            </foreach>
        )
    </delete>

    <select id="selsectAll" resultMap="brandResultMap">

    select *
     from tb_brand;
    </select>

<!--
    * 参数占位符：
        1.#{}：会将其替换为？。防止sql注入
        2.${}: 拼sql，存在sql注入


        *参数类型：parameterType
        *转换字符处理
           1.转义字符
           2.CDATA区

-->
    <select id="selectById" resultMap="brandResultMap">
        select *
        from tb_brand where id
         <![CDATA[
         =
         ]]>
         #{id};
    </select>

<!--    <select id="selectByCondition" resultMap="brandResultMap">-->
<!--        select * from tb_brand-->
<!--        where status = #{status} and company_name Like #{companyName} and brand_name Like #{brandName}-->
<!--    </select>-->

<!--动态条件查询
    *if:条件判断
        *test:逻辑表达式
    *问题
        *恒等式
        *<where> 替换 where


-->
    <select id="selectByCondition" resultMap="brandResultMap">
        select * from tb_brand
--         where 1 = 1
        <where>
              <if test="status !=null">
                and  status = #{status}
              </if>
          <if test="companyName != null and companyName != ''">
              and company_name Like #{companyName}
          </if>
        <if test="brandName != null and brandName != ''">
            and brand_name Like #{brandName}
        </if>
        </where>
    </select>

    <select id="selectByConditionSingle" resultMap="brandResultMap">
        select *
        from tb_brand
        where
        <choose>
            <when test="status !=null">
                status = #{status}
            </when>
            <when test="companyName != null and companyName != ''">
                company_name Like #{companyName}
            </when>
            <when test="brandName != null and brandName != ''">
                brand_name Like #{brandName}
            </when>
            <otherwise>
                1=1
            </otherwise>
        </choose>
    </select>

<!--    <select id="selectByConditionSingle" resultMap="brandResultMap">-->
<!--        select *-->
<!--        from tb_brand-->
<!--       <where>-->
<!--        <choose>-->
<!--            <when test="status !=null">-->
<!--                status = #{status}-->
<!--            </when>-->
<!--            <when test="companyName != null and companyName != ''">-->
<!--                company_name Like #{companyName}-->
<!--            </when>-->
<!--            <when test="brandName != null and brandName != ''">-->
<!--                brand_name Like #{brandName}-->
<!--            </when>-->

<!--        </choose>-->
<!--        </where>-->
<!--    </select>-->


</mapper>